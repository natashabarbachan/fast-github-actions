{
	"info": {
		"_postman_id": "bcc9bd9b-2005-4226-9929-71b65ba2fa42",
		"name": "disney-api-collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28607852",
		"_collection_link": "https://lively-space-885579.postman.co/workspace/Team-Workspace~9a178454-46b6-4dfa-8632-4f01d8e8365b/collection/28607852-bcc9bd9b-2005-4226-9929-71b65ba2fa42?action=share&source=collection_link&creator=28607852"
	},
	"item": [
		{
			"name": "Get all characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// SETUP",
							"const { code, status } = pm.response;",
							"const personagens = pm.response.json().data;",
							"",
							"// TESTS",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.expect(code).to.eql(200);",
							"});",
							"",
							"pm.test('Status is OK', function () {",
							"    pm.expect(status).to.eql('OK');",
							"});",
							"",
							"pm.test(\"A resposta contém a propriedade 'data'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"data\");",
							"});",
							"",
							"pm.test(\"Cada personagem possui a propriedade ID\", function () {",
							"    personagens.forEach(personagem => {",
							"        pm.expect(personagem).to.have.property(\"_id\");",
							"    });",
							"});",
							"",
							"pm.test(\"O nome de cada personagem é uma string\", function () {",
							"    personagens.forEach(personagem => {",
							"        pm.expect(personagem.name).to.be.a('string');",
							"    });",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.disneyapi.dev/character",
					"protocol": "https",
					"host": [
						"api",
						"disneyapi",
						"dev"
					],
					"path": [
						"character"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one character",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.disneyapi.dev/character/753",
					"protocol": "https",
					"host": [
						"api",
						"disneyapi",
						"dev"
					],
					"path": [
						"character",
						"753"
					]
				}
			},
			"response": []
		},
		{
			"name": "Filter characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// SETUP",
							"const { code, status } = pm.response;",
							"const personagem = pm.response.json().data;",
							"",
							"// TESTS",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.expect(code).to.eql(200);",
							"});",
							"",
							"pm.test('Status is OK', function () {",
							"    pm.expect(status).to.eql('OK');",
							"});",
							"",
							"pm.test(\"A resposta contém a propriedade 'data'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"data\");",
							"});",
							"",
							"pm.test(\"O personagem possui a propriedade ID\", function () {",
							"    pm.expect(personagem).to.have.property(\"_id\");",
							"});",
							"",
							"pm.test(\"O nome do personagem é uma string\", function () {",
							"    pm.expect(personagem.name).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Verifique que os filmes do personagem não está vazio\", function () {",
							"    pm.expect(personagem.films).is.not.empty;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.disneyapi.dev/character?name=Troy Bolton",
					"protocol": "https",
					"host": [
						"api",
						"disneyapi",
						"dev"
					],
					"path": [
						"character"
					],
					"query": [
						{
							"key": "name",
							"value": "Tarzan",
							"disabled": true
						},
						{
							"key": "name",
							"value": "Mickey Mouse",
							"disabled": true
						},
						{
							"key": "name",
							"value": "Troy Bolton"
						}
					]
				}
			},
			"response": []
		}
	]
}